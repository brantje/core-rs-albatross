name: Build + Release docker

on:
  push:
    tags:
      - 'v*'

jobs:
  rust_build:
    name: Build Nimiq with release flag
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install protoc
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler libprotobuf-dev libssl-dev libssl1.1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nimiq-dist
          path: |
            target/release/nimiq-client
            target/release/nimiq-bls
            target/release/nimiq-address
            target/release/nimiq-rpc

  build_docker:
    runs-on: ubuntu-20.04
    name: Build & publish docker image
    needs: rust_build
    steps:
      - name: Fix apt
        run: |
          sudo apt-get update --allow-releaseinfo-change
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download nimiq client artifact from previous job
        uses: actions/download-artifact@v3
        with:
          name: nimiq-dist
          path: target/release/

      - name: Run some commands
        run: |
          rm .dockerignore
          ls target/release/ -al
          chmod -R +x target/release/
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Login to image repository
        if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3
        with:
          context: .
          # platforms: linux/amd64, linux/arm64, linux/386
          file: Dockerfile.prod
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
